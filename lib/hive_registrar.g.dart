// Generated by Hive CE
// Do not modify
// Check in to version control

import 'package:hive_ce/hive.dart';
import 'package:geo_notes/map_repository/models/city_model/city_model.dart';
import 'package:geo_notes/map_repository/models/city_name_from_coordinates/city_name_from_coordinates.dart';
import 'package:geo_notes/map_repository/models/intersection/intersection.dart';
import 'package:geo_notes/map_repository/models/leg/leg.dart';
import 'package:geo_notes/map_repository/models/location_model/location_model.dart';
import 'package:geo_notes/map_repository/models/maneuver/maneuver.dart';
import 'package:geo_notes/map_repository/models/map_location_updated_model/map_location_updated_model.dart';
import 'package:geo_notes/map_repository/models/reverse_geocoding_model/reverse_geocoding_model.dart';
import 'package:geo_notes/map_repository/models/route/route_dop.dart';
import 'package:geo_notes/map_repository/models/route_model/route_model.dart';
import 'package:geo_notes/map_repository/models/step/step_model.dart';
import 'package:geo_notes/map_repository/models/waypoint/waypoint.dart';
import 'package:geo_notes/store/list_box/list_box.dart';

extension HiveRegistrar on HiveInterface {
  void registerAdapters() {
    registerAdapter(CityModelAdapter());
    registerAdapter(CityNameFromCoordinatesAdapter());
    registerAdapter(IntersectionAdapter());
    registerAdapter(LegAdapter());
    registerAdapter(ListBoxAdapter());
    registerAdapter(LocationModelAdapter());
    registerAdapter(ManeuverAdapter());
    registerAdapter(MapLocationUpdatedModelAdapter());
    registerAdapter(ReverseGeocodingModelAdapter());
    registerAdapter(RouteDopAdapter());
    registerAdapter(RouteModelAdapter());
    registerAdapter(StepModelAdapter());
    registerAdapter(WaypointAdapter());
  }
}

extension IsolatedHiveRegistrar on IsolatedHiveInterface {
  void registerAdapters() {
    registerAdapter(CityModelAdapter());
    registerAdapter(CityNameFromCoordinatesAdapter());
    registerAdapter(IntersectionAdapter());
    registerAdapter(LegAdapter());
    registerAdapter(ListBoxAdapter());
    registerAdapter(LocationModelAdapter());
    registerAdapter(ManeuverAdapter());
    registerAdapter(MapLocationUpdatedModelAdapter());
    registerAdapter(ReverseGeocodingModelAdapter());
    registerAdapter(RouteDopAdapter());
    registerAdapter(RouteModelAdapter());
    registerAdapter(StepModelAdapter());
    registerAdapter(WaypointAdapter());
  }
}
